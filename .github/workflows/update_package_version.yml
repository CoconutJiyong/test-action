name: Update Package Version

on:
  release:
    types: [created, edited]

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Set Ref and Checkout
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            echo "CHECKOUT_REF=main" >> $GITHUB_ENV  # Set CHECKOUT_REF to main for tags like v*
            echo "Tag is main"
          elif [[ "${{ github.ref }}" == "refs/tags/dev-"* ]]; then
            echo "CHECKOUT_REF=develop" >> $GITHUB_ENV  # Set CHECKOUT_REF to develop for tags like dev-*
            echo "Tag is develop"
          else
            echo "ref is [ ${{ github.ref }} ]"
            echo "Unsupported tag format. Using the default ref."
          fi

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - name: Extract Release Title and Set as Environment Variable
        run: |
          RELEASE_TITLE=$(jq --raw-output '.release.name' $GITHUB_EVENT_PATH)
          echo "version=$RELEASE_TITLE" >> $GITHUB_ENV
          echo "Release version is $RELEASE_TITLE"

      - name: Set Git User Info
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      - name: Update package.json and Push
        run: |
          jq ".version = \"${{ env.version }}\"" package.json > temp.json
          mv temp.json package.json
          git add package.json
          if git diff --staged --quiet; then
            echo "No changes to commit. Exiting..."
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
            exit 0
          else
            echo "Change to commit. in progress...." 
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          fi
          git commit -m "Update version to ${{ env.version }}"
          git push origin ${{ env.CHECKOUT_REF }}

      # 태그 생성 및 푸시
      - name: Tag and Push
        if: env.HAS_CHANGES == 'true'
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          git tag -f $TAG_NAME
          echo "Tag create"
          git push --force origin $TAG_NAME
          echo "Tag push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
